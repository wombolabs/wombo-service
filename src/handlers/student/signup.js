/* eslint-disable no-param-reassign */
import { generateUserToken } from '~/services/generateUserToken'
import { updateStudentByEmail, upsertStudent } from '~/services/students'
import { buildHandler, notNilNorEmpty } from '~/utils'
import { addGuildMember } from '~/services/discord'
import { InsufficientDataError } from '~/errors'

const validateDiscord = ({ email, username, discord }) => {
  if (discord?.id == null || discord?.accessToken == null || !discord?.scope.includes('guilds.join')) {
    throw new InsufficientDataError(
      `Discord required fields are missing for student ${email || username}.`,
      400,
      discord
    )
  }
}

const handler = async ({ body }, res) => {
  const { provider, data } = body

  if (provider === 'discord') {
    validateDiscord(data)
  }

  if (data.email == null) {
    data.email = `${data[provider].id}@autogenerated.wombo.gg`
  }

  data.lastLogin = new Date()

  const { id, email, discord, discordJoinDate } = await upsertStudent(data)

  if (discordJoinDate == null && notNilNorEmpty(discord)) {
    await addGuildMember(discord.id, discord.accessToken)

    await updateStudentByEmail(email, { discordJoinDate: new Date() })
  }

  return res.json({
    accessToken: generateUserToken({ id, email }),
  })
}

export const signupStudentHandler = buildHandler('/students/signup', 'post', handler)
